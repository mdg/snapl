
###############
### BACKLOG ###
###############

consider creating a response object for the request_processor to write
	back to, rather than writing directly to the connection

modify protocols to write an error if an unknown request_type is passed

implement the admin protocol

add tests for new classes:
	protocol
	shession_control
	shession_protocol?

add a logger class to allow turning debug messages on and off
	this should be log4c maybe?

see if it's possible to speed up the requests after polling

add a localhost-lockdown configuration to restrict all connections to those
	that are tunneled in through SSH

add a version handshake upon connections being made.  to allow shessiond to change
	while clients don't.

resolve blocking issues between mirrors.  export request can currently leave 2
	mirrors hanging on each other.  making thread queues for incoming & outgoing
	should resolve this and potentially speed up execution as well.

separate src code into server code and client code

usage, configuration and connections could potentially be
	broken out into separate reusable libraries

online printing of autogenerated config docs

document shessiond/memcached difference
document shessiond

password protection
encryption/SSL?
	might one or both of these be provided by SSH or SSH tunneling?

- scaling/optimizing
threading?  load testing suggests this may not be necessary initially

